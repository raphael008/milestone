<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.raphael008.mapper.BillMapper">
  <resultMap id="BaseResultMap" type="com.github.raphael008.model.Bill">
    <id column="bill_id" jdbcType="BIGINT" property="billId" />
    <result column="bill_date" jdbcType="DATE" property="billDate" />
    <result column="bill_price" jdbcType="DECIMAL" property="billPrice" />
    <result column="bill_image" jdbcType="VARCHAR" property="billImage" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="creator_id" jdbcType="BIGINT" property="creatorId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="deleted" jdbcType="INTEGER" property="deleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    bill_id, bill_date, bill_price, bill_image, remarks, creator_id, create_time, deleted
  </sql>
  <select id="selectByExample" parameterType="com.github.raphael008.model.BillExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dd_bill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from dd_bill
    where bill_id = #{billId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from dd_bill
    where bill_id = #{billId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.github.raphael008.model.BillExample">
    delete from dd_bill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="bill_id" keyProperty="billId" parameterType="com.github.raphael008.model.Bill" useGeneratedKeys="true">
    insert into dd_bill (bill_id, bill_date, bill_price, 
      bill_image, remarks, creator_id, 
      create_time, deleted)
    values (#{billId,jdbcType=BIGINT}, #{billDate,jdbcType=DATE}, #{billPrice,jdbcType=DECIMAL}, 
      #{billImage,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR}, #{creatorId,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{deleted,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.github.raphael008.model.Bill">
    insert into dd_bill
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="billId != null">
        bill_id,
      </if>
      <if test="billDate != null">
        bill_date,
      </if>
      <if test="billPrice != null">
        bill_price,
      </if>
      <if test="billImage != null">
        bill_image,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="creatorId != null">
        creator_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="billId != null">
        #{billId,jdbcType=BIGINT},
      </if>
      <if test="billDate != null">
        #{billDate,jdbcType=DATE},
      </if>
      <if test="billPrice != null">
        #{billPrice,jdbcType=DECIMAL},
      </if>
      <if test="billImage != null">
        #{billImage,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null">
        #{creatorId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.github.raphael008.model.BillExample" resultType="java.lang.Long">
    select count(*) from dd_bill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update dd_bill
    <set>
      <if test="record.billId != null">
        bill_id = #{record.billId,jdbcType=BIGINT},
      </if>
      <if test="record.billDate != null">
        bill_date = #{record.billDate,jdbcType=DATE},
      </if>
      <if test="record.billPrice != null">
        bill_price = #{record.billPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.billImage != null">
        bill_image = #{record.billImage,jdbcType=VARCHAR},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.creatorId != null">
        creator_id = #{record.creatorId,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleted != null">
        deleted = #{record.deleted,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update dd_bill
    set bill_id = #{record.billId,jdbcType=BIGINT},
      bill_date = #{record.billDate,jdbcType=DATE},
      bill_price = #{record.billPrice,jdbcType=DECIMAL},
      bill_image = #{record.billImage,jdbcType=VARCHAR},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      creator_id = #{record.creatorId,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      deleted = #{record.deleted,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.github.raphael008.model.Bill">
    update dd_bill
    <set>
      <if test="billDate != null">
        bill_date = #{billDate,jdbcType=DATE},
      </if>
      <if test="billPrice != null">
        bill_price = #{billPrice,jdbcType=DECIMAL},
      </if>
      <if test="billImage != null">
        bill_image = #{billImage,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null">
        creator_id = #{creatorId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=INTEGER},
      </if>
    </set>
    where bill_id = #{billId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.github.raphael008.model.Bill">
    update dd_bill
    set bill_date = #{billDate,jdbcType=DATE},
      bill_price = #{billPrice,jdbcType=DECIMAL},
      bill_image = #{billImage,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR},
      creator_id = #{creatorId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=INTEGER}
    where bill_id = #{billId,jdbcType=BIGINT}
  </update>
  <insert id="insertRange" keyColumn="bill_id" keyProperty="billId" parameterType="com.github.raphael008.model.Bill" useGeneratedKeys="true">
    insert into dd_bill (bill_id, bill_date, bill_price, bill_image, remarks, creator_id, create_time, deleted) values
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.billId, jdbcType=BIGINT}, #{item.billDate, jdbcType=DATE}, #{item.billPrice, jdbcType=DECIMAL}, #{item.billImage, jdbcType=VARCHAR}, #{item.remarks, jdbcType=VARCHAR}, #{item.creatorId, jdbcType=BIGINT}, #{item.createTime, jdbcType=TIMESTAMP}, #{item.deleted, jdbcType=INTEGER})
    </foreach>
  </insert>
  <insert id="insertRangeSelective" parameterType="com.github.raphael008.model.Bill">
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="billId != null">
        bill_id,
      </if>
      <if test="billDate != null">
        bill_date,
      </if>
      <if test="billPrice != null">
        bill_price,
      </if>
      <if test="billImage != null">
        bill_image,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="creatorId != null">
        creator_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="billId != null">
        #{billId, jdbcType=BIGINT},
      </if>
      <if test="billDate != null">
        #{billDate, jdbcType=DATE},
      </if>
      <if test="billPrice != null">
        #{billPrice, jdbcType=DECIMAL},
      </if>
      <if test="billImage != null">
        #{billImage, jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        #{remarks, jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null">
        #{creatorId, jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime, jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted, jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateRangeByPrimaryKey" parameterType="com.github.raphael008.model.Bill">
    update dd_bill set bill_date = #{billDate, jdbcType=DATE}, bill_price = #{billPrice, jdbcType=DECIMAL}, bill_image = #{billImage, jdbcType=VARCHAR}, remarks = #{remarks, jdbcType=VARCHAR}, creator_id = #{creatorId, jdbcType=BIGINT}, create_time = #{createTime, jdbcType=TIMESTAMP}, deleted = #{deleted, jdbcType=INTEGER} where bill_id = #{billId, jdbcType=BIGINT}
  </update>
  <update id="updateRangeByPrimaryKeySelective" parameterType="com.github.raphael008.model.Bill">
    update dd_bill
    <set>
      <if test="billDate != null">
        bill_date = #{billDate, jdbcType=DATE},
      </if>
      <if test="billPrice != null">
        bill_price = #{billPrice, jdbcType=DECIMAL},
      </if>
      <if test="billImage != null">
        bill_image = #{billImage, jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        remarks = #{remarks, jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null">
        creator_id = #{creatorId, jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime, jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        deleted = #{deleted, jdbcType=INTEGER},
      </if>
    </set>
    where bill_id = #{billId, jdbcType=BIGINT}
  </update>
</mapper>