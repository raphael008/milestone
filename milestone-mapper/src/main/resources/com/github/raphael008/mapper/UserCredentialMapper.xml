<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.raphael008.mapper.UserCredentialMapper">
  <resultMap id="BaseResultMap" type="com.github.raphael008.model.UserCredential">
    <id column="credential_id" jdbcType="BIGINT" property="credentialId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="user_password" jdbcType="VARCHAR" property="userPassword" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    credential_id, user_id, user_password
  </sql>
  <select id="selectByExample" parameterType="com.github.raphael008.model.UserCredentialExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bd_user_credential
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bd_user_credential
    where credential_id = #{credentialId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from bd_user_credential
    where credential_id = #{credentialId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.github.raphael008.model.UserCredentialExample">
    delete from bd_user_credential
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.github.raphael008.model.UserCredential">
    insert into bd_user_credential (credential_id, user_id, user_password
      )
    values (#{credentialId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{userPassword,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.github.raphael008.model.UserCredential">
    insert into bd_user_credential
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="credentialId != null">
        credential_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userPassword != null">
        user_password,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="credentialId != null">
        #{credentialId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userPassword != null">
        #{userPassword,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.github.raphael008.model.UserCredentialExample" resultType="java.lang.Long">
    select count(*) from bd_user_credential
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bd_user_credential
    <set>
      <if test="record.credentialId != null">
        credential_id = #{record.credentialId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.userPassword != null">
        user_password = #{record.userPassword,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bd_user_credential
    set credential_id = #{record.credentialId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      user_password = #{record.userPassword,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.github.raphael008.model.UserCredential">
    update bd_user_credential
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="userPassword != null">
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
    </set>
    where credential_id = #{credentialId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.github.raphael008.model.UserCredential">
    update bd_user_credential
    set user_id = #{userId,jdbcType=BIGINT},
      user_password = #{userPassword,jdbcType=VARCHAR}
    where credential_id = #{credentialId,jdbcType=BIGINT}
  </update>
  <insert id="insertRange" parameterType="com.github.raphael008.model.UserCredential">
    insert into bd_user_credential (credentialId, userId, userPassword) values(#{credentialId, jdbcType=BIGINT}, #{userId, jdbcType=BIGINT}, #{userPassword, jdbcType=VARCHAR})
  </insert>
  <insert id="insertRangeSelective" parameterType="com.github.raphael008.model.UserCredential">
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="credentialId != null">
        credential_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userPassword != null">
        user_password,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="credentialId != null">
        #{credentialId, jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId, jdbcType=BIGINT},
      </if>
      <if test="userPassword != null">
        #{userPassword, jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateRangeByPrimaryKey" parameterType="com.github.raphael008.model.UserCredential">
    update bd_user_credential set user_id = #{userId, jdbcType=BIGINT}, user_password = #{userPassword, jdbcType=VARCHAR} where credential_id = #{credentialId, jdbcType=BIGINT}
  </update>
  <update id="updateRangeByPrimaryKeySelective" parameterType="com.github.raphael008.model.UserCredential">
    update bd_user_credential
    <set>
      <if test="userId != null">
        user_id = #{userId, jdbcType=BIGINT},
      </if>
      <if test="userPassword != null">
        user_password = #{userPassword, jdbcType=VARCHAR},
      </if>
    </set>
    where credential_id = #{credentialId, jdbcType=BIGINT}
  </update>
</mapper>